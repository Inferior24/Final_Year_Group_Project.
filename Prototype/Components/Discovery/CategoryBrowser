import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ArrowRight } from "lucide-react";
import { motion } from "framer-motion";
import APICard from "./APICard";

export default function CategoryBrowser({ 
  categories, 
  apiDatabase, 
  isDark, 
  favorites, 
  onToggleFavorite, 
  onSelectAPI, 
  onCategorySelect 
}) {
  const getAPIsByCategory = (categoryId) => {
    return Object.values(apiDatabase)
      .filter(api => api.category === categoryId)
      .sort((a, b) => b.metadata.popularity - a.metadata.popularity)
      .slice(0, 3);
  };

  return (
    <motion.section
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.2 }}
      className="space-y-8"
    >
      <div className="text-center">
        <h2 className={`text-3xl font-bold mb-2 ${isDark ? 'text-white' : 'text-gray-800'}`}>
          ðŸ“š Browse by Category
        </h2>
        <p className={`text-lg ${isDark ? 'text-gray-300' : 'text-gray-600'}`}>
          Discover APIs organized by their primary use cases
        </p>
      </div>

      {categories.map((category, categoryIndex) => {
        const categoryAPIs = getAPIsByCategory(category.id);
        const CategoryIcon = category.icon;

        return (
          <motion.div
            key={category.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3 + categoryIndex * 0.1 }}
            className="space-y-6"
          >
            {/* Category Header */}
            <Card className={`${
              isDark 
                ? 'bg-gradient-to-r from-gray-800/40 to-gray-700/40 border-gray-600/30 backdrop-blur-xl' 
                : 'bg-gradient-to-r from-white/80 to-gray-50/80 border-gray-200/50 backdrop-blur-xl'
            }`}>
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-4">
                    <div className={`p-4 rounded-2xl bg-gradient-to-br ${category.color}`}>
                      <CategoryIcon className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className={`text-2xl font-bold ${isDark ? 'text-white' : 'text-gray-800'}`}>
                        {category.name}
                      </h3>
                      <p className={`${isDark ? 'text-gray-300' : 'text-gray-600'} mt-1`}>
                        {category.description}
                      </p>
                      <Badge 
                        variant="outline" 
                        className={`mt-2 ${
                          isDark 
                            ? 'border-gray-500 text-gray-300' 
                            : 'border-gray-300 text-gray-600'
                        }`}
                      >
                        {category.count} APIs available
                      </Badge>
                    </div>
                  </div>
                  
                  <Button
                    onClick={() => onCategorySelect(category.id)}
                    className={`bg-gradient-to-r ${category.color} hover:shadow-lg transform hover:scale-105 transition-all duration-200`}
                  >
                    View All
                    <ArrowRight className="w-4 h-4 ml-2" />
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* Category APIs Preview */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {categoryAPIs.map((api, apiIndex) => (
                <APICard
                  key={api.id}
                  api={api}
                  index={apiIndex}
                  isDark={isDark}
                  isFavorite={favorites.has(api.id)}
                  onToggleFavorite={() => onToggleFavorite(api.id)}
                  onSelect={() => onSelectAPI(api)}
                />
              ))}
            </div>
          </motion.div>
        );
      })}
    </motion.section>
  );
}
